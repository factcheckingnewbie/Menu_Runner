import { Button, VerticalBox, HorizontalBox, ListView, ScrollView } from "std-widgets.slint";

export struct MenuEntry {
    label: string,
    actions: [string],
    command-template: string,
}

// Simple button component without color styling
component StateButton inherits Button {
    in property<string> action;
    in property<string> profile;
    
    // Display button text based on action
    text: root.action;
    primary: true;
    
    // Basic sizing
    padding: 8px;
    height: 30px;
    min-width: 75px;
}

export component MainWindow inherits Window {
    title: "Menu Runner";
    width: 400px;
    height: 500px;

    callback run_command(string, string);
    callback get_button_color(string, string) -> string; // Keep interface for compatibility
    callback refresh();    
    in property <[MenuEntry]> menu_items;
    
    public function trigger_refresh() {    
        self.refresh();
    }
    
    VerticalBox {
        Text {
            text: "Menu Runner";
            font-size: 24px;
            horizontal-alignment: center;
        }

        Rectangle {
            height: 3px;
            background: #ccc;
        }

        ScrollView {
            VerticalBox {
                for menu_item in menu_items: VerticalBox {
                    // Menu item heading
                    Text {
                        text: menu_item.label;
                        font-size: 18px;
                        horizontal-alignment: center;
                        padding-top: 10px;
                        padding-bottom: 5px;
                    }

                    // Row of action buttons
                    HorizontalBox {
                        alignment: center;
                        spacing: 3px;

                        for action in menu_item.actions: StateButton {
                            action: action;
                            profile: menu_item.label;
                            
                            // Respond to button clicks
                            clicked => {
                                // Run the command when clicked
                                root.run_command(menu_item.command-template, self.action);
                            }
                        }
                    }

                    // Divider between menu items
                    Rectangle {
                        height: 3px;
                        background: #eee;
                    }
                }
            }
        }
    }
}
